[package]
name = "turn-server-proto"
description = "TURN server protocol in a sans-IO fashion"
version.workspace = true
authors = ["Matthew Waters <matthew@centricular.com>"]
license = "MIT OR Apache-2.0"
keywords = ["TURN"]
categories = ["network-programming", ]
documentation = "https://docs.rs/turn-server-proto"
edition.workspace = true
repository.workspace = true
rust-version.workspace = true

[features]
default = ["rustls", "std", "openssl"]
rustls = ["dep:rustls", "std"]
std = ["turn-types/std", "stun-proto/std", "thiserror/std", "rand/std"]
openssl = ["dep:openssl", "std"]

[dependencies]
byteorder.workspace = true
stun-proto.workspace = true
thiserror.workspace = true
tracing.workspace = true
turn-types.workspace = true
pnet_packet = { version = "0.35", default-features = false }
openssl = { workspace = true, optional = true }
rand = { version = "0.9", default-features = false, features = ["alloc", "os_rng"] }
rustls = { workspace = true, optional = true }
smallvec = "1"

[dev-dependencies]
criterion.workspace = true
rustls.workspace = true
turn-client-proto = { path = "../turn-client-proto" }
tracing = { workspace = true, features = ["std"] }
tracing-subscriber.workspace = true

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin)'] }

[[bench]]
name = "sendrecv"
harness = false
